spring.application.name=fast-order

# Endpoint context
server.servlet.context-path=/api

# Import the .env file
spring.config.import=optional:file:.env[.properties]

# Data Source Properties

# H2 -> Test

# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.url=jdbc:h2:mem:testdb;INIT=CREATE SCHEMA IF NOT EXISTS fast_order_schema
# spring.datasource.username=sa
# spring.datasource.password=
# spring.h2.console.enabled=true
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# PostgreSQL

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.database=postgresql

# JPA Properties
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# Kafka
spring.kafka.bootstrap-servers=localhost:9092

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Consumer
spring.kafka.consumer.group-id=fast-order-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages="fast_order.entity"

